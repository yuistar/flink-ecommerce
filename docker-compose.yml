---
version: '3.8'
x-kafka-common:
  &kafka-common
  image: confluentinc/cp-kafka:7.9.0
  networks:
    kafka-flink-net:
  environment:
    &kafka-common-env
    KAFKA_PROCESS_ROLES: 'broker,controller'
    KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kakfa-1:29093,2@kafka-2:29093,3@kafka-3:29093' # kraft
    KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
    KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'

    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

    KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
    KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
    KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    KAFKA_JMX_PORT: 9101
    KAFKA_JMX_HOSTNAME: localhost
    KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#    KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
    CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:29092
    CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1

    KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
    CONFLUENT_METRICS_ENABLE: 'true'
    CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
    # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
    CLUSTER_ID: 'm1Ze6AjGRwqarkcxJscgyQ'


services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.28
    container_name: es-container
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - 9200:9200

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.28
    container_name: kb-container
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
      - XPACK_SECURITY_ENABLED=false
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

  kafka-1:
    <<: *kafka-common
    container_name: kafka-1

    ports:
      - "9091:9091"
    environment:
      <<: *kafka-common-env
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9091'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka-1:29092,CONTROLLER://kafka-1:29093,PLAINTEXT_HOST://0.0.0.0:9091'

  kafka-2:
    <<: *kafka-common
    container_name: kafka-2
    ports:
      - "9092:9092"
    environment:
      <<: *kafka-common-env
      KAFKA_NODE_ID: 2
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-2:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka-2:29092,CONTROLLER://kafka-2:29093,PLAINTEXT_HOST://0.0.0.0:9092'

  kafka-3:
    <<: *kafka-common
    container_name: kafka-3
    ports:
      - "9093:9093"
    environment:
      <<: *kafka-common-env
      KAFKA_NODE_ID: 3
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-3:29092,PLAINTEXT_HOST://localhost:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka-3:29092,CONTROLLER://kafka-3:29093,PLAINTEXT_HOST://0.0.0.0:9093'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.0
    hostname: schema-registry
    container_name: schema-registry
    networks:
      kafka-flink-net:
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "18081:18081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_DEBUG: "true"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-1:29092,kafka-2:29092,kafka-3:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:18081
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: "full_transitive"

  schema-registry-ui:
    image: landoop/schema-registry-ui
    hostname: schema-registry
    restart: always
    container_name: schema-registry-ui
    networks:
      kafka-flink-net:
    depends_on:
      - schema-registry
    ports:
      - "7999:8000"
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:18081
      PROXY: "true"
      ALLOW_GLOBAL: "true"
      ALLOW_TRANSITIVE: "true"
      ALLOW_DELETION: "true"

networks:
  kafka-flink-net: